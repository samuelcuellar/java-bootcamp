//Ejercicio 1.1


public class Circle {

	private double radius;
	private String color;

	// Constructores

	public Circle() {
		radius = 1.0;
		color = "red";
	}

	public Circle(double r) {
		radius = r;
		color = "red";
	}

	public Circle(double r, String c) {
		radius = r;
		color = c;
	}

	// Setters
	/*
	 * public void setRadius (double r) { radius = r; } public void setColor
	 * (String c) { color=c; }
	 */
	public void setRadius(double radius) {
		this.radius = radius;
	}

	public void setColor(String color) {
		this.color = color;
	}

	// Métodos

	public double getRadius() {
		return radius;
	}

	public double getArea() {
		return radius * radius * Math.PI;
	}

	public String getColor() {
		return color;
	}

	// Método toString
	public String toString() {
		return "Circle: radius=" + radius + " color=" + color + " Area=" + getArea();
	}
}




public class TestCircle {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		Circle c1 = new Circle();

		// System.out.println("The circle has radius of "
		// + c1.getRadius() + " and area of " + c1.getArea()+" Su color es:"+
		// c1.getColor());
		System.out.println(c1.toString()); // print mediante metodo toString

		Circle c2 = new Circle(2.0);

		System.out.println(c2);// elprintln llama implícitamente al toString

		Circle c3 = new Circle();
		c3.setRadius(5.0);
		c3.setColor("black");
		System.out.println("The circles has radius of:" + c3.getRadius() + " y de color " + c3.getColor());
		// print mediante concatenación

	}

}